ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.clockConfig,"ax",%progbits
  19              		.align	2
  20              		.global	clockConfig
  21              		.thumb
  22              		.thumb_func
  24              	clockConfig:
  25              	.LFB63:
  26              		.file 1 "Inc/clock.h"
   1:Inc/clock.h   **** /* Library for Clock Config
   2:Inc/clock.h   ****  * Options for Clock
   3:Inc/clock.h   ****  * Clock Option: 
   4:Inc/clock.h   ****  * 		1. HSI --> Internal High Speed Clock
   5:Inc/clock.h   ****  *		2. HSE --> External High Speed Clock
   6:Inc/clock.h   ****  *
   7:Inc/clock.h   ****  * Clock Speed:
   8:Inc/clock.h   ****  * 		1. SPEED_8  --> Internal or External clock with 8 MHZ no PLL (CSS OFF/ON) 
   9:Inc/clock.h   ****  *		2. SPEED_64 --> Internal HSI clock with PLL for 64 MHZ speed (CSS OFF)
  10:Inc/clock.h   ****  *		3. SPEED_72 --> External HSI clock with PLL for 72 MHZ (CSS ON)
  11:Inc/clock.h   ****  */ 
  12:Inc/clock.h   **** 
  13:Inc/clock.h   **** #ifndef CLOCKCONFIG
  14:Inc/clock.h   **** #define	CLOCKCONFIG
  15:Inc/clock.h   **** 
  16:Inc/clock.h   **** // Define speed Parameters
  17:Inc/clock.h   **** #define HSI			0
  18:Inc/clock.h   **** #define HSE 		1
  19:Inc/clock.h   **** #define SPEED_8		2
  20:Inc/clock.h   **** #define SPEED_72	3
  21:Inc/clock.h   **** #define SPEED_64	4
  22:Inc/clock.h   **** 
  23:Inc/clock.h   **** void clockConfig(uint8_t clock_type, uint8_t clock_speed){
  27              		.loc 1 23 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  24:Inc/clock.h   **** 	
  25:Inc/clock.h   **** 	// If HSI with SPEED_8
  26:Inc/clock.h   **** 	// HSI with PLL off and CSS OFF
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 2


  27:Inc/clock.h   **** 	if(clock_type == HSI && clock_speed == SPEED_8){
  33              		.loc 1 27 0
  34 0000 0346     		mov	r3, r0
  35 0002 08BB     		cbnz	r0, .L2
  36              		.loc 1 27 0 is_stmt 0 discriminator 1
  37 0004 0229     		cmp	r1, #2
  38 0006 1FD1     		bne	.L2
  28:Inc/clock.h   **** 		
  29:Inc/clock.h   **** 		// On the HSI
  30:Inc/clock.h   **** 		RCC->CR |= RCC_CR_HSION;
  39              		.loc 1 30 0 is_stmt 1
  40 0008 544B     		ldr	r3, .L19
  41 000a 1A68     		ldr	r2, [r3]
  42 000c 42F00102 		orr	r2, r2, #1
  43 0010 1A60     		str	r2, [r3]
  31:Inc/clock.h   **** 		
  32:Inc/clock.h   **** 		// Wait for HSI to Ready
  33:Inc/clock.h   **** 		while(!(RCC->CR & (RCC_CR_HSIRDY)));
  44              		.loc 1 33 0
  45 0012 1A46     		mov	r2, r3
  46              	.L3:
  47              		.loc 1 33 0 is_stmt 0 discriminator 1
  48 0014 1368     		ldr	r3, [r2]
  49 0016 13F0020F 		tst	r3, #2
  50 001a FBD0     		beq	.L3
  34:Inc/clock.h   **** 
  35:Inc/clock.h   **** 		// APB1 takes prescaller of 1
  36:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE1_2);
  51              		.loc 1 36 0 is_stmt 1
  52 001c 4F4B     		ldr	r3, .L19
  53 001e 5A68     		ldr	r2, [r3, #4]
  54 0020 22F48062 		bic	r2, r2, #1024
  55 0024 5A60     		str	r2, [r3, #4]
  37:Inc/clock.h   **** 
  38:Inc/clock.h   **** 		// APB2 takes prescaller of 1
  39:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE2_2);
  56              		.loc 1 39 0
  57 0026 5A68     		ldr	r2, [r3, #4]
  58 0028 22F40052 		bic	r2, r2, #8192
  59 002c 5A60     		str	r2, [r3, #4]
  40:Inc/clock.h   **** 
  41:Inc/clock.h   **** 		// AHB Prescaler 1
  42:Inc/clock.h   **** 		RCC-> CFGR &= ~(RCC_CFGR_HPRE_2);
  60              		.loc 1 42 0
  61 002e 5A68     		ldr	r2, [r3, #4]
  62 0030 22F04002 		bic	r2, r2, #64
  63 0034 5A60     		str	r2, [r3, #4]
  43:Inc/clock.h   **** 
  44:Inc/clock.h   **** 		// PLL OFF 
  45:Inc/clock.h   **** 		RCC->CR &= ~(RCC_CR_PLLON);
  64              		.loc 1 45 0
  65 0036 1A68     		ldr	r2, [r3]
  66 0038 22F08072 		bic	r2, r2, #16777216
  67 003c 1A60     		str	r2, [r3]
  46:Inc/clock.h   **** 
  47:Inc/clock.h   **** 		// SYSCLOCK AS HSI
  48:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_SW_0 | RCC_CFGR_SW_1);
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 3


  68              		.loc 1 48 0
  69 003e 5A68     		ldr	r2, [r3, #4]
  70 0040 22F00302 		bic	r2, r2, #3
  71 0044 5A60     		str	r2, [r3, #4]
  72 0046 7047     		bx	lr
  73              	.L2:
  49:Inc/clock.h   **** 	}
  50:Inc/clock.h   **** 
  51:Inc/clock.h   **** 	// Clock type HSI and speed 64 that is maximum with internal
  52:Inc/clock.h   **** 	// HSI with PLL ON and CSS OFF
  53:Inc/clock.h   **** 	else if(clock_type == HSI && clock_speed == SPEED_64){
  74              		.loc 1 53 0
  75 0048 002B     		cmp	r3, #0
  76 004a 3FD1     		bne	.L5
  77              		.loc 1 53 0 is_stmt 0 discriminator 1
  78 004c 0429     		cmp	r1, #4
  79 004e 3DD1     		bne	.L5
  54:Inc/clock.h   **** 		
  55:Inc/clock.h   **** 		// HSI ON
  56:Inc/clock.h   **** 		RCC->CR |= RCC_CR_HSION;
  80              		.loc 1 56 0 is_stmt 1
  81 0050 03F18043 		add	r3, r3, #1073741824
  82 0054 03F50433 		add	r3, r3, #135168
  83 0058 1A68     		ldr	r2, [r3]
  84 005a 42F00102 		orr	r2, r2, #1
  85 005e 1A60     		str	r2, [r3]
  57:Inc/clock.h   **** 		
  58:Inc/clock.h   **** 		// Wait for HSI to ready
  59:Inc/clock.h   **** 		while(!(RCC->CR & (RCC_CR_HSIRDY)));
  86              		.loc 1 59 0
  87 0060 1A46     		mov	r2, r3
  88              	.L6:
  89              		.loc 1 59 0 is_stmt 0 discriminator 1
  90 0062 1368     		ldr	r3, [r2]
  91 0064 13F0020F 		tst	r3, #2
  92 0068 FBD0     		beq	.L6
  60:Inc/clock.h   **** 
  61:Inc/clock.h   **** 		// PLL Predivider 2 & Clock source HSI
  62:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PLLSRC);
  93              		.loc 1 62 0 is_stmt 1
  94 006a 3C4B     		ldr	r3, .L19
  95 006c 5A68     		ldr	r2, [r3, #4]
  96 006e 22F48032 		bic	r2, r2, #65536
  97 0072 5A60     		str	r2, [r3, #4]
  63:Inc/clock.h   **** 
  64:Inc/clock.h   **** 		// Load PLL With Mul Factor
  65:Inc/clock.h   **** 		RCC->CFGR |= (RCC_CFGR_PLLMULL_1 |RCC_CFGR_PLLMULL_2 );
  98              		.loc 1 65 0
  99 0074 5A68     		ldr	r2, [r3, #4]
 100 0076 42F4C012 		orr	r2, r2, #1572864
 101 007a 5A60     		str	r2, [r3, #4]
  66:Inc/clock.h   **** 
  67:Inc/clock.h   **** 		// Start the PLL
  68:Inc/clock.h   **** 		RCC->CR |= RCC_CR_PLLON;
 102              		.loc 1 68 0
 103 007c 1A68     		ldr	r2, [r3]
 104 007e 42F08072 		orr	r2, r2, #16777216
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 4


 105 0082 1A60     		str	r2, [r3]
  69:Inc/clock.h   **** 
  70:Inc/clock.h   **** 		// Wait till PLL Ready
  71:Inc/clock.h   **** 		while(!(RCC->CR & (RCC_CR_PLLRDY)));
 106              		.loc 1 71 0
 107 0084 1A46     		mov	r2, r3
 108              	.L7:
 109              		.loc 1 71 0 is_stmt 0 discriminator 1
 110 0086 1368     		ldr	r3, [r2]
 111 0088 13F0007F 		tst	r3, #33554432
 112 008c FBD0     		beq	.L7
  72:Inc/clock.h   **** 
  73:Inc/clock.h   **** 		// APB1 div 2, as max clock 36MHZ
  74:Inc/clock.h   **** 		RCC->CFGR |= RCC_CFGR_PPRE1_2;
 113              		.loc 1 74 0 is_stmt 1
 114 008e 334B     		ldr	r3, .L19
 115 0090 5A68     		ldr	r2, [r3, #4]
 116 0092 42F48062 		orr	r2, r2, #1024
 117 0096 5A60     		str	r2, [r3, #4]
  75:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE1_1 | RCC_CFGR_PPRE1_0);
 118              		.loc 1 75 0
 119 0098 5A68     		ldr	r2, [r3, #4]
 120 009a 22F44072 		bic	r2, r2, #768
 121 009e 5A60     		str	r2, [r3, #4]
  76:Inc/clock.h   **** 
  77:Inc/clock.h   **** 		// APB2 div 1
  78:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE1_2);
 122              		.loc 1 78 0
 123 00a0 5A68     		ldr	r2, [r3, #4]
 124 00a2 22F48062 		bic	r2, r2, #1024
 125 00a6 5A60     		str	r2, [r3, #4]
  79:Inc/clock.h   **** 
  80:Inc/clock.h   **** 		// AHB Div 1
  81:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_HPRE_3);
 126              		.loc 1 81 0
 127 00a8 5A68     		ldr	r2, [r3, #4]
 128 00aa 22F08002 		bic	r2, r2, #128
 129 00ae 5A60     		str	r2, [r3, #4]
  82:Inc/clock.h   **** 
  83:Inc/clock.h   **** 		// Select the sysclock Switch as PLL
  84:Inc/clock.h   **** 		RCC->CFGR |= RCC_CFGR_SW_1;
 130              		.loc 1 84 0
 131 00b0 5A68     		ldr	r2, [r3, #4]
 132 00b2 42F00202 		orr	r2, r2, #2
 133 00b6 5A60     		str	r2, [r3, #4]
  85:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_SW_0);
 134              		.loc 1 85 0
 135 00b8 5A68     		ldr	r2, [r3, #4]
 136 00ba 22F00102 		bic	r2, r2, #1
 137 00be 5A60     		str	r2, [r3, #4]
  86:Inc/clock.h   **** 
  87:Inc/clock.h   **** 		while(!(RCC->CFGR & (RCC_CFGR_SWS_1)));
 138              		.loc 1 87 0
 139 00c0 1A46     		mov	r2, r3
 140              	.L8:
 141              		.loc 1 87 0 is_stmt 0 discriminator 1
 142 00c2 5368     		ldr	r3, [r2, #4]
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 5


 143 00c4 13F0080F 		tst	r3, #8
 144 00c8 FBD0     		beq	.L8
 145 00ca 7047     		bx	lr
 146              	.L5:
  88:Inc/clock.h   **** 	}
  89:Inc/clock.h   **** 
  90:Inc/clock.h   ****  
  91:Inc/clock.h   **** 	else if(clock_type == HSE && clock_speed == SPEED_72){
 147              		.loc 1 91 0 is_stmt 1
 148 00cc 012B     		cmp	r3, #1
 149 00ce 43D1     		bne	.L1
 150              		.loc 1 91 0 is_stmt 0 discriminator 1
 151 00d0 0329     		cmp	r1, #3
 152 00d2 41D1     		bne	.L1
  92:Inc/clock.h   **** 		// Chip is running by its internal 8Mhz Clock
  93:Inc/clock.h   **** 		// Now set it to use external 8 mhz clock with PLLx9 and Sysclock as HSEXPLL
  94:Inc/clock.h   **** 		// After This Chip will run at 72Mhz
  95:Inc/clock.h   **** 		// CSS will be ON so if anything on HSE happens, chip with run on HSI with 64 MHZ
  96:Inc/clock.h   **** 
  97:Inc/clock.h   **** 		// Set the clock input to HSE
  98:Inc/clock.h   **** 		RCC->CR |= RCC_CR_HSEON;
 153              		.loc 1 98 0 is_stmt 1
 154 00d4 214B     		ldr	r3, .L19
 155 00d6 1A68     		ldr	r2, [r3]
 156 00d8 42F48032 		orr	r2, r2, #65536
 157 00dc 1A60     		str	r2, [r3]
  99:Inc/clock.h   **** 
 100:Inc/clock.h   **** 		// Wait till it enables
 101:Inc/clock.h   **** 		while(!(RCC->CR & (RCC_CR_HSERDY)));
 158              		.loc 1 101 0
 159 00de 1A46     		mov	r2, r3
 160              	.L9:
 161              		.loc 1 101 0 is_stmt 0 discriminator 1
 162 00e0 1368     		ldr	r3, [r2]
 163 00e2 13F4003F 		tst	r3, #131072
 164 00e6 FBD0     		beq	.L9
 102:Inc/clock.h   **** 
 103:Inc/clock.h   **** 		// CSS ON 
 104:Inc/clock.h   **** 		//RCC->CR |= RCC_CR_CSSON;
 105:Inc/clock.h   **** 
 106:Inc/clock.h   **** 		// Load PLL With Mul Factor 9
 107:Inc/clock.h   **** 		RCC->CFGR |= (RCC_CFGR_PLLMULL_1);
 165              		.loc 1 107 0 is_stmt 1
 166 00e8 1C4B     		ldr	r3, .L19
 167 00ea 5A68     		ldr	r2, [r3, #4]
 168 00ec 42F40022 		orr	r2, r2, #524288
 169 00f0 5A60     		str	r2, [r3, #4]
 108:Inc/clock.h   **** 		RCC ->CFGR &= ~(RCC_CFGR_PLLMULL_3);
 170              		.loc 1 108 0
 171 00f2 5A68     		ldr	r2, [r3, #4]
 172 00f4 22F40012 		bic	r2, r2, #2097152
 173 00f8 5A60     		str	r2, [r3, #4]
 109:Inc/clock.h   **** 
 110:Inc/clock.h   **** 		// PLL Prediv 1
 111:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PLLXTPRE);
 174              		.loc 1 111 0
 175 00fa 5A68     		ldr	r2, [r3, #4]
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 6


 176 00fc 22F40032 		bic	r2, r2, #131072
 177 0100 5A60     		str	r2, [r3, #4]
 112:Inc/clock.h   **** 
 113:Inc/clock.h   **** 		//PLL Entry
 114:Inc/clock.h   **** 		RCC->CFGR |= (RCC_CFGR_PLLSRC);
 178              		.loc 1 114 0
 179 0102 5A68     		ldr	r2, [r3, #4]
 180 0104 42F48032 		orr	r2, r2, #65536
 181 0108 5A60     		str	r2, [r3, #4]
 115:Inc/clock.h   **** 
 116:Inc/clock.h   **** 
 117:Inc/clock.h   **** 		//Configure the APB1 Prescaler to 2 because it's max speed is 36MHZ
 118:Inc/clock.h   **** 		RCC->CFGR |= RCC_CFGR_PPRE1_2;
 182              		.loc 1 118 0
 183 010a 5A68     		ldr	r2, [r3, #4]
 184 010c 42F48062 		orr	r2, r2, #1024
 185 0110 5A60     		str	r2, [r3, #4]
 119:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE1_0 | RCC_CFGR_PPRE1_1);
 186              		.loc 1 119 0
 187 0112 5A68     		ldr	r2, [r3, #4]
 188 0114 22F44072 		bic	r2, r2, #768
 189 0118 5A60     		str	r2, [r3, #4]
 120:Inc/clock.h   **** 
 121:Inc/clock.h   **** 		// APB2 Prescaler 1
 122:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_PPRE2_2);
 190              		.loc 1 122 0
 191 011a 5A68     		ldr	r2, [r3, #4]
 192 011c 22F40052 		bic	r2, r2, #8192
 193 0120 5A60     		str	r2, [r3, #4]
 123:Inc/clock.h   **** 
 124:Inc/clock.h   **** 		//AHB Presecaler 1
 125:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_HPRE_3);
 194              		.loc 1 125 0
 195 0122 5A68     		ldr	r2, [r3, #4]
 196 0124 22F08002 		bic	r2, r2, #128
 197 0128 5A60     		str	r2, [r3, #4]
 126:Inc/clock.h   **** 
 127:Inc/clock.h   **** 	    // Start the PLL
 128:Inc/clock.h   **** 		RCC->CR |= RCC_CR_PLLON;
 198              		.loc 1 128 0
 199 012a 1A68     		ldr	r2, [r3]
 200 012c 42F08072 		orr	r2, r2, #16777216
 201 0130 1A60     		str	r2, [r3]
 129:Inc/clock.h   **** 
 130:Inc/clock.h   **** 		// Wait till PLL Ready
 131:Inc/clock.h   **** 		while(!(RCC->CR & (RCC_CR_PLLRDY)));
 202              		.loc 1 131 0
 203 0132 1A46     		mov	r2, r3
 204              	.L10:
 205              		.loc 1 131 0 is_stmt 0 discriminator 1
 206 0134 1368     		ldr	r3, [r2]
 207 0136 13F0007F 		tst	r3, #33554432
 208 013a FBD0     		beq	.L10
 132:Inc/clock.h   **** 
 133:Inc/clock.h   **** 		// Select the sysclock Switch as PLL
 134:Inc/clock.h   **** 		RCC->CFGR |= RCC_CFGR_SW_1;
 209              		.loc 1 134 0 is_stmt 1
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 7


 210 013c 074B     		ldr	r3, .L19
 211 013e 5A68     		ldr	r2, [r3, #4]
 212 0140 42F00202 		orr	r2, r2, #2
 213 0144 5A60     		str	r2, [r3, #4]
 135:Inc/clock.h   **** 		RCC->CFGR &= ~(RCC_CFGR_SW_0);
 214              		.loc 1 135 0
 215 0146 5A68     		ldr	r2, [r3, #4]
 216 0148 22F00102 		bic	r2, r2, #1
 217 014c 5A60     		str	r2, [r3, #4]
 136:Inc/clock.h   **** 
 137:Inc/clock.h   **** 		// Disable HSI to save power
 138:Inc/clock.h   **** 		//RCC->CR &= ~(RCC_CR_HSION);
 139:Inc/clock.h   **** 
 140:Inc/clock.h   **** 		while(!(RCC->CFGR & (RCC_CFGR_SWS_1)));
 218              		.loc 1 140 0
 219 014e 1A46     		mov	r2, r3
 220              	.L11:
 221              		.loc 1 140 0 is_stmt 0 discriminator 1
 222 0150 5368     		ldr	r3, [r2, #4]
 223 0152 13F0080F 		tst	r3, #8
 224 0156 FBD0     		beq	.L11
 225              	.L1:
 226 0158 7047     		bx	lr
 227              	.L20:
 228 015a 00BF     		.align	2
 229              	.L19:
 230 015c 00100240 		.word	1073876992
 231              		.cfi_endproc
 232              	.LFE63:
 234              		.section	.text.NMI_Handler,"ax",%progbits
 235              		.align	2
 236              		.global	NMI_Handler
 237              		.thumb
 238              		.thumb_func
 240              	NMI_Handler:
 241              	.LFB64:
 141:Inc/clock.h   **** 	}
 142:Inc/clock.h   **** }
 143:Inc/clock.h   **** void NMI_Handler(){
 242              		.loc 1 143 0 is_stmt 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 144:Inc/clock.h   **** 
 145:Inc/clock.h   **** 	// Clearing the interrupt for CSS
 146:Inc/clock.h   **** 	RCC->CIR |= RCC_CIR_CSSC;
 247              		.loc 1 146 0
 248 0000 024B     		ldr	r3, .L22
 249 0002 9A68     		ldr	r2, [r3, #8]
 250 0004 42F40002 		orr	r2, r2, #8388608
 251 0008 9A60     		str	r2, [r3, #8]
 252 000a 7047     		bx	lr
 253              	.L23:
 254              		.align	2
 255              	.L22:
 256 000c 00100240 		.word	1073876992
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 8


 257              		.cfi_endproc
 258              	.LFE64:
 260              		.section	.text.someDelay,"ax",%progbits
 261              		.align	2
 262              		.global	someDelay
 263              		.thumb
 264              		.thumb_func
 266              	someDelay:
 267              	.LFB65:
 268              		.file 2 "Src/main.c"
   1:Src/main.c    **** // System will run from internal clock as we didnt configure trhe rcc yet
   2:Src/main.c    **** 
   3:Src/main.c    **** // Including the necessary Header file
   4:Src/main.c    **** #include "stm32f1xx.h"
   5:Src/main.c    **** #include "clock.h"
   6:Src/main.c    **** 
   7:Src/main.c    **** // Start of someDelay Function to provide delay
   8:Src/main.c    **** void someDelay(){
 269              		.loc 2 8 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL1:
 275              	.LBB2:
   9:Src/main.c    **** 	for(unsigned int i=0;i<60000;i++){
 276              		.loc 2 9 0
 277 0000 0022     		movs	r2, #0
 278 0002 4EF65F20 		movw	r0, #59999
 279 0006 1146     		mov	r1, r2
 280 0008 06E0     		b	.L25
 281              	.LVL2:
 282              	.L26:
 283              	.LBB3:
  10:Src/main.c    **** 		for(unsigned int j=0;j<30;j++)__asm("NOP");
 284              		.loc 2 10 0 discriminator 2
 285              	@ 10 "Src/main.c" 1
 286 000a 00BF     		NOP
 287              	@ 0 "" 2
 288              		.thumb
 289 000c 0133     		adds	r3, r3, #1
 290              	.LVL3:
 291 000e 00E0     		b	.L27
 292              	.LVL4:
 293              	.L28:
 294              	.LBE3:
 295 0010 0B46     		mov	r3, r1
 296              	.L27:
 297              	.LVL5:
 298              	.LBB4:
 299              		.loc 2 10 0 is_stmt 0 discriminator 1
 300 0012 1D2B     		cmp	r3, #29
 301 0014 F9D9     		bls	.L26
 302              	.LBE4:
   9:Src/main.c    **** 	for(unsigned int i=0;i<60000;i++){
 303              		.loc 2 9 0 is_stmt 1
 304 0016 0132     		adds	r2, r2, #1
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 9


 305              	.LVL6:
 306              	.L25:
   9:Src/main.c    **** 	for(unsigned int i=0;i<60000;i++){
 307              		.loc 2 9 0 is_stmt 0 discriminator 1
 308 0018 8242     		cmp	r2, r0
 309 001a F9D9     		bls	.L28
 310              	.LBE2:
  11:Src/main.c    **** 	}
  12:Src/main.c    **** }
 311              		.loc 2 12 0 is_stmt 1
 312 001c 7047     		bx	lr
 313              		.cfi_endproc
 314              	.LFE65:
 316 001e 00BF     		.section	.text.main,"ax",%progbits
 317              		.align	2
 318              		.global	main
 319              		.thumb
 320              		.thumb_func
 322              	main:
 323              	.LFB66:
  13:Src/main.c    **** // Start of the main Function
  14:Src/main.c    **** int main(void)
  15:Src/main.c    **** {
 324              		.loc 2 15 0
 325              		.cfi_startproc
 326              		@ Volatile: function does not return.
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI0:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
  16:Src/main.c    **** 	//Initializing the clock
  17:Src/main.c    **** 	clockConfig(HSE,SPEED_72);
 334              		.loc 2 17 0
 335 0002 0120     		movs	r0, #1
 336 0004 0321     		movs	r1, #3
 337 0006 FFF7FEFF 		bl	clockConfig
 338              	.LVL7:
  18:Src/main.c    **** 
  19:Src/main.c    **** 	// Configure the AHPB(Advance High Performance Bus) Clock for GPIOB
  20:Src/main.c    **** 	RCC -> APB2ENR |= RCC_APB2ENR_IOPBEN;	// GPIOB Bus Clock Enabled
 339              		.loc 2 20 0
 340 000a 104B     		ldr	r3, .L31
 341 000c 9A69     		ldr	r2, [r3, #24]
 342 000e 42F00802 		orr	r2, r2, #8
 343 0012 9A61     		str	r2, [r3, #24]
  21:Src/main.c    **** 
  22:Src/main.c    **** 	// Set Mode, Type of Output For GPIO Pin
  23:Src/main.c    **** 	// Mode	->	11,		CNF ->	00	Output Push Pull with Max 50MHZ Output Speed
  24:Src/main.c    **** 	// We are setting GPIOB9
  25:Src/main.c    **** 	GPIOB->CRH |=  (GPIO_CRH_MODE9);	// Set MODE9[1:0] to 11
 344              		.loc 2 25 0
 345 0014 A3F58233 		sub	r3, r3, #66560
 346 0018 5A68     		ldr	r2, [r3, #4]
 347 001a 42F03002 		orr	r2, r2, #48
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 10


 348 001e 5A60     		str	r2, [r3, #4]
  26:Src/main.c    **** 	GPIOB->CRH &= ~(GPIO_CRH_CNF9);		// Set CNF9[1:0] to 00
 349              		.loc 2 26 0
 350 0020 5A68     		ldr	r2, [r3, #4]
 351 0022 22F0C002 		bic	r2, r2, #192
 352 0026 5A60     		str	r2, [r3, #4]
  27:Src/main.c    **** 
  28:Src/main.c    **** 	//Set the LED
  29:Src/main.c    **** 	GPIOB->BRR |= (GPIO_BRR_BR9);	// Setting the GPIOB9 to Low
 353              		.loc 2 29 0
 354 0028 5A69     		ldr	r2, [r3, #20]
 355 002a 42F40072 		orr	r2, r2, #512
 356 002e 5A61     		str	r2, [r3, #20]
  30:Src/main.c    ****     while(1)
  31:Src/main.c    ****     {
  32:Src/main.c    ****     	// Now Blink the LED Forever
  33:Src/main.c    ****     	GPIOB->BSRR |= (GPIO_BSRR_BS9);	// Setting the bit to High
 357              		.loc 2 33 0
 358 0030 1C46     		mov	r4, r3
 359              	.L30:
 360              		.loc 2 33 0 is_stmt 0 discriminator 1
 361 0032 2369     		ldr	r3, [r4, #16]
 362 0034 43F40073 		orr	r3, r3, #512
 363 0038 2361     		str	r3, [r4, #16]
  34:Src/main.c    **** 
  35:Src/main.c    ****     	// Provide some delay
  36:Src/main.c    ****     	someDelay();
 364              		.loc 2 36 0 is_stmt 1 discriminator 1
 365 003a FFF7FEFF 		bl	someDelay
 366              	.LVL8:
  37:Src/main.c    **** 
  38:Src/main.c    ****     	// Reset the LED Again
  39:Src/main.c    ****     	GPIOB->BRR |= (GPIO_BRR_BR9);	// Setting the bit to LOW
 367              		.loc 2 39 0 discriminator 1
 368 003e 6369     		ldr	r3, [r4, #20]
 369 0040 43F40073 		orr	r3, r3, #512
 370 0044 6361     		str	r3, [r4, #20]
  40:Src/main.c    **** 
  41:Src/main.c    ****     	// provide some delay
  42:Src/main.c    ****     	someDelay();
 371              		.loc 2 42 0 discriminator 1
 372 0046 FFF7FEFF 		bl	someDelay
 373              	.LVL9:
 374 004a F2E7     		b	.L30
 375              	.L32:
 376              		.align	2
 377              	.L31:
 378 004c 00100240 		.word	1073876992
 379              		.cfi_endproc
 380              	.LFE66:
 382              		.text
 383              	.Letext0:
 384              		.file 3 "/Users/deep/Desktop/ARM STM32F103/compiler/arm-none-eabi/include/machine/_default_types.h
 385              		.file 4 "/Users/deep/Desktop/ARM STM32F103/compiler/arm-none-eabi/include/stdint.h"
 386              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 387              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:19     .text.clockConfig:0000000000000000 $t
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:24     .text.clockConfig:0000000000000000 clockConfig
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:230    .text.clockConfig:000000000000015c $d
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:235    .text.NMI_Handler:0000000000000000 $t
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:240    .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:256    .text.NMI_Handler:000000000000000c $d
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:261    .text.someDelay:0000000000000000 $t
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:266    .text.someDelay:0000000000000000 someDelay
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:317    .text.main:0000000000000000 $t
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:322    .text.main:0000000000000000 main
/var/folders/1t/jyfxp5fx7wl71r4cwcn521_c0000gn/T//cc5k2Xvc.s:378    .text.main:000000000000004c $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
